trigger:
- master

pr:
- '*'

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  angularAppName: 'ClientUIForAzure'

steps:
- checkout: self
  displayName: 'Checkout Repository'

- script: |
    echo "Current directory: $(System.DefaultWorkingDirectory)"
    cd $(System.DefaultWorkingDirectory)/ClientPortal
    echo "Contents of the Angular app directory:"
    dir
    npm install --legacy-peer-deps
  displayName: 'Install Dependencies'

- script: |
    echo "Current directory: $(System.DefaultWorkingDirectory)"
    cd $(System.DefaultWorkingDirectory)/ClientPortal
    echo "Contents of the Angular app directory:"
    dir
    npm run build -- --prod
  displayName: 'Build Angular App'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/ClientUIForAzure/ClientPortal/dist/Ibsmart'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/publish'
  displayName: 'Copy Build Artifacts'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/publish'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish Build Artifacts'

- task: IISWebAppManagementOnMachineGroup@0
  inputs:
    IISDeploymentType: 'IISWebsite'
    ActionIISWebsite: 'CreateOrUpdateWebsite'
    CreateOrUpdateWebsiteName: 'IoTAdmin'
    PhysicalPath: '$(System.DefaultWorkingDirectory)/drop'
    AddBinding: true
    CreateOrUpdateAppPoolForWebsite: true
    AppPoolNameForWebsite: 'YourAppPoolName'
  displayName: 'Create or Update IIS Website'

- task: IISWebAppDeploymentOnMachineGroup@0
  inputs:
    WebSiteName: 'IoTAdmin'
    VirtualApplication: '/'
    Package: '$(Build.ArtifactStagingDirectory)/publish'
    XmlVariableSubstitution: true
    TakeAppOfflineFlag: true
  displayName: 'Deploy to IIS Website'
