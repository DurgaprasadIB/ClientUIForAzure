# Define your pipeline
trigger:
- main

pr:
- none

pool:
  vmImage: 'windows-latest'

# Define stages
stages:
- stage: Build
  displayName: 'Build and Publish'
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.x'
      displayName: 'Install .NET SDK'

    - script: |
        dotnet restore
        dotnet build --configuration Release
        dotnet publish --configuration Release --output $(Build.ArtifactStagingDirectory)/IoTTesting
      displayName: 'Build and Publish'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/IoTTesting'
        artifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy to IoT Devices'
  jobs:
  - job: Deploy
    displayName: 'Deploy'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: 'drop'
        downloadPath: '$(Build.ArtifactStagingDirectory)'

    # Add your deployment steps here using the artifacts downloaded to $(Build.ArtifactStagingDirectory)


- stage: Deploy
  displayName: 'Deploy to IIS'
  jobs:
  - job: Deploy
    displayName: 'Deploy'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: 'drop'
        downloadPath: '$(Build.ArtifactStagingDirectory)'

    - task: IISWebAppDeploymentOnMachineGroup@0
      inputs:
        WebSiteName: 'IoTUI'
        VirtualApplication: '/'
        Package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
        SetParametersFile: ''
        TakeAppOfflineFlag: 'True'
        XmlTransformation: 'True'
        XmlVariableSubstitution: 'True'
        RemoveAdditionalFilesFlag: 'True'
        ExcludeFilesFromAppDataFlag: 'False'
        AdditionalArguments: '-UseCheckSum'
        PowerShellVersion: 'LatestVersion'
