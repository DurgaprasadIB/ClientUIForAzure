trigger:
- main

pr:
- none

pool:
  vmImage: 'windows-latest'

stages:
- stage: Build
  displayName: 'Build and Publish'
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
      displayName: 'Install and Build'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        pathtoPublish: '$(System.DefaultWorkingDirectory)'
        artifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  jobs:
  - job: Prepare
    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "This is a job without dependencies, serving as the starting point for the Deploy stage."

  - job: Deploy
    dependsOn: Prepare
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'
      displayName: 'Download Artifacts'

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Configure TrustedHosts
          Set-Item WSMan:\localhost\Client\TrustedHosts -Value "98.70.42.23" -Force

          # Check WinRM Configuration
          winrm get winrm/config

          # If not using a domain, allow unencrypted traffic
          winrm set winrm/config/client '@{AllowUnencrypted="true"}'

          # Enable CredSSP authentication
          winrm set winrm/config/client/auth '@{CredSSP="true"}'
      displayName: 'Configure WinRM'

    - task: IISWebAppDeploy@2
      inputs:
        machinesList: '98.70.42.23'
        AdminUserName: 'IBuser'
        AdminPassword: 'IBtesting#321'
        WinRMProtocol: 'Http'
        WebDeployPackage: '$(System.ArtifactsDirectory)/drop'
        WebsiteName: 'IOTUI'
        action: 'Run Shell Script'
        scriptType: 'inline'
        inlineScript: |
          # Install IIS (if not installed)
          Install-WindowsFeature -Name Web-Server -IncludeManagementTools

          # Create a new IIS site
          New-WebSite -Name 'IOTUI' -PhysicalPath 'C:\pipeline' -BindingInformation '*:80:'

          # Restart IIS on the VM
          Restart-Service -Name 'W3SVC' -Force
      displayName: 'Deploy and Configure IIS'

